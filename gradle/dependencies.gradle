/*
 * Copyright (c) 2017 Zac Sweers
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
  // Build
  minSdkVersion = 21
  targetSdkVersion = 26
  compileSdkVersion = 26
  buildToolsVersion = '26.0.0'
  ci = 'true' == System.getenv('CI')

  // Google
  supportVersion = '26.1.0'
  playServicesVersion = '10.2.1'
  firebaseVersion = playServicesVersion
  supportAnnotations = "com.android.support:support-annotations:$supportVersion"
  supportAppCompat = "com.android.support:appcompat-v7:$supportVersion"
  supportCardView = "com.android.support:cardview-v7:$supportVersion"
  supportCustomTabs = "com.android.support:customtabs:$supportVersion"
  supportCustomTabs = "com.android.support:customtabs:$supportVersion"
  supportDesign = "com.android.support:design:$supportVersion"
  supportPalette = "com.android.support:palette-v7:$supportVersion"
  supportPercent = "com.android.support:percent:$supportVersion"
  supportPreference = "com.android.support:preference-v7:$supportVersion"
  supportRecyclerView = "com.android.support:recyclerview-v7:$supportVersion"
  supportCompat = "com.android.support:support-compat:$supportVersion"
  supportV4 = "com.android.support:support-v4:$supportVersion"
  multidex = 'com.android.support:multidex:1.0.2'
  androidPlugin = 'com.android.tools.build:gradle:3.3.0-alpha13'
  constraintLayout = 'com.android.support.constraint:constraint-layout:1.1.0-beta1'

  // Kotlin
  kotlinVersion = '1.3.0-rc-146'
  kotlinPlugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  kotlinStdLib = "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  kotlinStdLib7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

  // Firebase
  firebaseCore = "com.google.firebase:firebase-core:$firebaseVersion"
  firebaseConfig = "com.google.firebase:firebase-config:$firebaseVersion"
  firebaseDatabase = "com.google.firebase:firebase-database:$firebaseVersion"
  autoValueFirebaseVersion = '1.1.0'
  autoValueFirebase = "me.mattlogan.auto.value:auto-value-firebase:$autoValueFirebaseVersion"
  autoValueFirebaseAnnotation =
      "me.mattlogan.auto.value:auto-value-firebase-annotation:$autoValueFirebaseVersion"
  autoValueFirebaseAdapter =
      "me.mattlogan.auto.value:auto-value-firebase-adapter:$autoValueFirebaseVersion"

  // Dagger
  daggerVersion = '2.11'
  dagger = "com.google.dagger:dagger:$daggerVersion"
  daggerCompiler = "com.google.dagger:dagger-compiler:$daggerVersion"
  daggerAndroid = "com.google.dagger:dagger-android:$daggerVersion"
  javax = 'org.glassfish:javax.annotation:10.0-b28'

  // AutoValue
  autoValue = 'com.google.auto.value:auto-value:1.4.1'
  autoValueAnnotations = 'com.jakewharton.auto.value:auto-value-annotations:1.4'
  autoValueMoshi = 'com.ryanharter.auto.value:auto-value-moshi:0.4.3'
  autoValueMoshiAnnotations = 'com.ryanharter.auto.value:auto-value-moshi-annotations:0.4.3'
  autoValueRedacted = 'com.squareup.auto.value:auto-value-redacted:1.0.1'

  // Conductor
  conductorVersion = '2.1.3'
  conductor = "com.bluelinelabs:conductor:$conductorVersion"
  conductorSupport = "com.bluelinelabs:conductor-support:$conductorVersion"

  // Chuck
  chuckVersion = '1.0.4'
  chuck = "com.readystatesoftware.chuck:library:$chuckVersion"
  chuckNoop = "com.readystatesoftware.chuck:library-no-op:$chuckVersion"

  // Misc
  autoDisposeVersion = '0.2.0'
  autoDispose = "com.uber.autodispose:autodispose:$autoDisposeVersion"
  autoDisposeAndroid = "com.uber.autodispose:autodispose-android:$autoDisposeVersion"
  autoDisposeKotlin = "com.uber.autodispose:autodispose-kotlin:$autoDisposeVersion"
  bugsnag = 'com.bugsnag:bugsnag-android:3.9.0'
  errorPronePlugin = 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.10'
  errorProneCore = 'com.google.errorprone:error_prone_core:2.0.19'
  errorProneAnnotations = 'com.google.errorprone:error_prone_annotations:2.0.19'
  glide = 'com.github.bumptech.glide:glide:4.0.0-RC0'
  glideOkhttp = 'com.github.bumptech.glide:okhttp3-integration:4.0.0-RC0'
  lottie = 'com.airbnb.android:lottie:2.0.0'
  moshiLazyAdapters = 'com.serjltt.moshi:moshi-lazy-adapters:2.0'
  psyncPlugin = 'gradle.plugin.com.flipboard:psync:1.1.5'
  recyclerViewAnimators = 'jp.wasabeef:recyclerview-animators:2.2.6'
  simpleXml = 'org.simpleframework:simple-xml:2.7.1'
  stethoVersion = '1.5.0'
  stetho = "com.facebook.stetho:stetho:$stethoVersion"
  stethoOkHttp = "com.facebook.stetho:stetho-okhttp3:$stethoVersion"
  versionsPlugin = 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
  bugsnagPlugin = 'com.bugsnag:bugsnag-android-gradle-plugin:2.4.2'

  // Apollo
  def apolloVersion = '0.3.2'
  apolloPlugin = "com.apollographql.apollo:gradle-plugin:$apolloVersion"
  apolloRuntime = "com.apollographql.apollo:apollo-runtime:$apolloVersion"
  apolloRx2Support = "com.apollographql.apollo:apollo-rx2-support:$apolloVersion"
  apolloAndroidSupport = "com.apollographql.apollo:apollo-android-support:$apolloVersion"

  // Personal
  barberVersion = '1.3.1'
  barberCompiler = "io.sweers.barber:barber-compiler:$barberVersion"
  barberApi = "io.sweers.barber:barber-api:$barberVersion"
  rxPaletteVersion = '0.3.0'
  rxPalette = "io.sweers.rxpalette:rxpalette:$rxPaletteVersion"
  rxPaletteKotlin = "io.sweers.rxpalette:rxpalette-kotlin:$rxPaletteVersion"

  // Rx
  rxAndroid = 'io.reactivex:rxandroid:1.2.1'
  rxBindingVersion = '2.0.0'
  rxBinding = "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"
  rxBindingV4 = "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBindingVersion"
  rxBindingDesign = "com.jakewharton.rxbinding2:rxbinding-design:$rxBindingVersion"
  rxJava = 'io.reactivex:rxjava:1.3.0'
  rxPreferences = 'com.f2prateek.rx.preferences:rx-preferences:1.0.2'
  rxReceivers = 'com.f2prateek.rx.receivers:rx-receivers:0.1.0'
  rxRelay = 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

  rxJava2 = 'io.reactivex.rxjava2:rxjava:2.1.0'
  rxAndroid2 = 'io.reactivex.rxjava2:rxandroid:2.0.1'
  rxJava2Interop = 'com.github.akarnokd:rxjava2-interop:0.10.0'
  rxJava2Extensions = 'com.github.akarnokd:rxjava2-extensions:0.17.0'

  // Square and JW
  butterKnifeVersion = '8.6.0'
  butterKnife = "com.jakewharton:butterknife:$butterKnifeVersion"
  butterKnifeCompiler = "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
  jsr305 = 'com.google.code.findbugs:jsr305:3.0.2'
  leakCanaryVersion = '1.5.1'
  leakCanary = "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
  leakCanaryNoop = "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
  okhttpVersion = '3.8.0'
  okhttp = "com.squareup.okhttp3:okhttp:$okhttpVersion"
  okhttpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
  okhttpWebSockets = "com.squareup.okhttp3:okhttp-ws:$okhttpVersion"
  okio = 'com.squareup.okio:okio:1.13.0'
  madge = 'com.jakewharton.madge:madge:1.1.4'
  moshiVersion = '1.5.0'
  moshi = "com.squareup.moshi:moshi:$moshiVersion"
  processPhoenix = 'com.jakewharton:process-phoenix:2.0.0'
  retrofitVersion = '2.3.0'
  retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
  retrofitMock = "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
  retrofitMoshi = "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
  retrofitRxJava = "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
  retrofitRxJava2 = "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
  retrofitXml = "com.squareup.retrofit2:converter-simplexml:$retrofitVersion"
  scalpel = 'com.jakewharton.scalpel:scalpel:1.1.2'
  telescope = 'com.mattprecious.telescope:telescope:2.1.0'
  threetenabp = 'com.jakewharton.threetenabp:threetenabp:1.0.5'
  timber = 'com.jakewharton.timber:timber:4.5.1'

  // Testing
  assertj = 'org.assertj:assertj-core:2.2.0'
  assertjAndroidVersion = '1.1.1'
  assertjAndroid = "com.squareup.assertj:assertj-android:$assertjAndroidVersion"
  hamcrest = 'org.hamcrest:hamcrest-core:1.3'
  junit = 'junit:junit:4.12'
  mockito = 'org.mockito:mockito-core:2.1.0'
  robolectric = 'org.robolectric:robolectric:3.2.2'
  truth = 'com.google.truth:truth:0.33'

  // Espresso
  supportTestVersion = '0.4.1'
  supportTestRunner = "com.android.support.test:runner:$supportTestVersion"
  supportTestRules = "com.android.support.test:rules:$supportTestVersion"
  supportTestEspressoVersion = '2.2.1'
  supportTestEspresso =
      "com.android.support.test.espresso:espresso-core:$supportTestEspressoVersion"
  supportTestEspressoContrib =
      "com.android.support.test.espresso:espresso-contrib:$supportTestEspressoVersion"
  supportTestEspressoWeb =
      "com.android.support.test.espresso:espresso-web:$supportTestEspressoVersion"

  // query git for the SHA, Tag and commit count. Use these to automate versioning.
  gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
  gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
  gitCommitCount = 100 + Integer.parseInt(
      'git rev-list --count HEAD'.execute([], project.rootDir).text.trim() ?: '0')
  gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
  gitTimestamp = 'git log -n 1 --format=%at'.execute([], rootDir).text.trim()
}
